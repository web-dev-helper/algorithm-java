buildscript {
	repositories {
        jcenter()
	}

    dependencies {
        classpath "com.palantir:jacoco-coverage:0.4.0"
    }
}


group 'pratice'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'com.palantir.jacoco-coverage'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

// Default tasks to run with ./gradlew
defaultTasks 'clean', 'assemble', 'test'

// Code Coverage =============================================
jacoco {
    toolVersion = "0.7.1.201405082137"
}

// JaCoCo - Coverage Limits
jacocoCoverage {
    // Enforce minimum code coverage for every Java file.
    //classThreshold 0.80
    classThreshold 0.80, INSTRUCTION

    // White list
//    classThreshold 0.0, INSTRUCTION, 'com/bns/pm/intl/domain/IntlCustomerTitle'
}

// JaCoCo - Override some of Jacoco default values
jacocoTestReport {
    description 'Generates Code coverage report. Fails build if it does not meet minimum coverage.'

    reports {
        xml.enabled true    //XML required by coveralls and for the below coverage checks
        html.enabled = true
        csv.enabled = false
    }
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, excludes: [
//            							'com/bns/xsd/**/*.class',
//                                         'com/bns/pm/intl/Main.class'
                                         ])
        })
    }
}